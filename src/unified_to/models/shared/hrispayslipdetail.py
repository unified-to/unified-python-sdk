"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from typing import Optional
from unified_to import utils

class HrisPayslipDetailType(str, Enum):
    EARNING_SALARY = 'EARNING_SALARY'
    EARNING_OVERTIME = 'EARNING_OVERTIME'
    EARNING_TIP = 'EARNING_TIP'
    EARNING_BONUS = 'EARNING_BONUS'
    EARNING_COMMISSION = 'EARNING_COMMISSION'
    EARNING_ADJUSTMENT = 'EARNING_ADJUSTMENT'
    EARNING = 'EARNING'
    PRETAX_DEDUCTION = 'PRETAX_DEDUCTION'
    PRETAX_DEDUCTION_HEALTH_INSURANCE = 'PRETAX_DEDUCTION_HEALTH_INSURANCE'
    PRETAX_DEDUCTION_RETIREMENT = 'PRETAX_DEDUCTION_RETIREMENT'
    PRETAX_DEDUCTION_HRA = 'PRETAX_DEDUCTION_HRA'
    TAX_FEDERAL = 'TAX_FEDERAL'
    TAX_REGION = 'TAX_REGION'
    TAX_LOCAL = 'TAX_LOCAL'
    POSTTAX_BENEFIT = 'POSTTAX_BENEFIT'
    POSTTAX_GARNISHMENT = 'POSTTAX_GARNISHMENT'
    REIMBURSEMENT = 'REIMBURSEMENT'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class HrisPayslipDetail:
    amount: float = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('amount') }})
    company_amount: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('company_amount'), 'exclude': lambda f: f is None }})
    description: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('description'), 'exclude': lambda f: f is None }})
    employee_amount: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('employee_amount'), 'exclude': lambda f: f is None }})
    name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name'), 'exclude': lambda f: f is None }})
    type: Optional[HrisPayslipDetailType] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('type'), 'exclude': lambda f: f is None }})
    

