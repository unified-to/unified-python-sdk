"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from typing import Optional
from unified_to import utils


class PropertyPropertyUserUrnIetfParamsScimSchemasExtensionEnterprise20UserManagerType(str, Enum):
    DIRECT = 'direct'
    INDIRECT = 'indirect'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class PropertyPropertyUserUrnIetfParamsScimSchemasExtensionEnterprise20UserManager:
    dollar_ref: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('$ref'), 'exclude': lambda f: f is None }})
    display_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('displayName'), 'exclude': lambda f: f is None }})
    manager_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('managerId'), 'exclude': lambda f: f is None }})
    type: Optional[PropertyPropertyUserUrnIetfParamsScimSchemasExtensionEnterprise20UserManagerType] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('type'), 'exclude': lambda f: f is None }})
    value: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('value'), 'exclude': lambda f: f is None }})
    

