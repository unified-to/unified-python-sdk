"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ...models.shared import webhook as shared_webhook
from datetime import datetime
from typing import List, Optional


@dataclasses.dataclass
class ConnectionID:
    r"""A connection represents a specific authentication of an integration."""
    



@dataclasses.dataclass
class IntegrationType:
    r"""Informational object for supported integrations."""
    



@dataclasses.dataclass
class ListUnifiedWebhooksRequest:
    connection_id: Optional[ConnectionID] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'connection_id', 'style': 'form', 'explode': True }})
    r"""A connection represents a specific authentication of an integration."""
    created_lte: Optional[datetime] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'created_lte', 'style': 'form', 'explode': True }})
    r"""Return only results whose created date is equal or less to this value"""
    env: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'env', 'style': 'form', 'explode': True }})
    integration_type: Optional[IntegrationType] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'integration_type', 'style': 'form', 'explode': True }})
    r"""Informational object for supported integrations."""
    limit: Optional[float] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'limit', 'style': 'form', 'explode': True }})
    object: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'object', 'style': 'form', 'explode': True }})
    r"""Filter the results for webhooks for only this object"""
    offset: Optional[float] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'offset', 'style': 'form', 'explode': True }})
    order: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'order', 'style': 'form', 'explode': True }})
    sort: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'sort', 'style': 'form', 'explode': True }})
    updated_gte: Optional[datetime] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'updated_gte', 'style': 'form', 'explode': True }})
    r"""Return only results whose updated date is equal or greater to this value"""
    



@dataclasses.dataclass
class ListUnifiedWebhooksResponse:
    content_type: str = dataclasses.field()
    r"""HTTP response content type for this operation"""
    status_code: int = dataclasses.field()
    r"""HTTP response status code for this operation"""
    raw_response: requests_http.Response = dataclasses.field()
    r"""Raw HTTP response; suitable for custom response parsing"""
    webhooks: Optional[List[shared_webhook.Webhook]] = dataclasses.field(default=None)
    r"""Successful"""
    

