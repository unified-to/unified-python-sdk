"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from datetime import datetime
from enum import Enum
from typing import Dict, List, Optional
from typing_extensions import NotRequired, TypedDict
from unified_python_sdk.types import BaseModel


class MetadataMetadataRawTypedDict(TypedDict):
    pass


class MetadataMetadataRaw(BaseModel):
    pass


class MetadataMetadataType(str, Enum):
    TEXT = "TEXT"
    NUMBER = "NUMBER"
    DATE = "DATE"
    BOOLEAN = "BOOLEAN"
    FILE = "FILE"
    TEXTAREA = "TEXTAREA"
    SINGLE_SELECT = "SINGLE_SELECT"
    MULTIPLE_SELECT = "MULTIPLE_SELECT"
    MEASUREMENT = "MEASUREMENT"
    PRICE = "PRICE"
    YES_NO = "YES_NO"
    CURRENCY = "CURRENCY"
    URL = "URL"


class MetadataMetadataTypedDict(TypedDict):
    name: str
    object_type: str
    created_at: NotRequired[datetime]
    id: NotRequired[str]
    objects: NotRequired[Dict[str, str]]
    options: NotRequired[List[str]]
    raw: NotRequired[MetadataMetadataRawTypedDict]
    type: NotRequired[MetadataMetadataType]
    updated_at: NotRequired[datetime]


class MetadataMetadata(BaseModel):
    name: str

    object_type: str

    created_at: Optional[datetime] = None

    id: Optional[str] = None

    objects: Optional[Dict[str, str]] = None

    options: Optional[List[str]] = None

    raw: Optional[MetadataMetadataRaw] = None

    type: Optional[MetadataMetadataType] = None

    updated_at: Optional[datetime] = None
