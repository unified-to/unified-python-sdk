"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .property_scimuser_meta import PropertyScimUserMeta, PropertyScimUserMetaTypedDict
from .property_scimuser_name import PropertyScimUserName, PropertyScimUserNameTypedDict
from .property_scimuser_schemas import PropertyScimUserSchemas
from .property_scimuser_urn_ietf_params_scim_schemas_extension_enterprise_2_0_user import (
    PropertyScimUserUrnIetfParamsScimSchemasExtensionEnterprise20User,
    PropertyScimUserUrnIetfParamsScimSchemasExtensionEnterprise20UserTypedDict,
)
from .property_scimuser_urn_ietf_params_scim_schemas_extension_lattice_attributes_1_0_user import (
    PropertyScimUserUrnIetfParamsScimSchemasExtensionLatticeAttributes10User,
    PropertyScimUserUrnIetfParamsScimSchemasExtensionLatticeAttributes10UserTypedDict,
)
from .property_scimuser_urn_ietf_params_scim_schemas_extension_peakon_2_0_user import (
    PropertyScimUserUrnIetfParamsScimSchemasExtensionPeakon20User,
    PropertyScimUserUrnIetfParamsScimSchemasExtensionPeakon20UserTypedDict,
)
from .scimaddress import ScimAddress, ScimAddressTypedDict
from .scimemail import ScimEmail, ScimEmailTypedDict
from .scimentitlement import ScimEntitlement, ScimEntitlementTypedDict
from .scimims import ScimIms, ScimImsTypedDict
from .scimphonenumber import ScimPhoneNumber, ScimPhoneNumberTypedDict
from .scimphoto import ScimPhoto, ScimPhotoTypedDict
from .scimrole import ScimRole, ScimRoleTypedDict
from .scimusergroups import ScimUserGroups, ScimUserGroupsTypedDict
import pydantic
from typing import List, Optional
from typing_extensions import Annotated, NotRequired, TypedDict
from unified_python_sdk.types import BaseModel


class ScimUserTypedDict(TypedDict):
    active: NotRequired[bool]
    addresses: NotRequired[List[ScimAddressTypedDict]]
    display_name: NotRequired[str]
    emails: NotRequired[List[ScimEmailTypedDict]]
    entitlements: NotRequired[List[ScimEntitlementTypedDict]]
    external_id: NotRequired[str]
    groups: NotRequired[List[ScimUserGroupsTypedDict]]
    id: NotRequired[str]
    ims: NotRequired[List[ScimImsTypedDict]]
    locale: NotRequired[str]
    meta: NotRequired[PropertyScimUserMetaTypedDict]
    name: NotRequired[PropertyScimUserNameTypedDict]
    nick_name: NotRequired[str]
    password: NotRequired[str]
    phone_numbers: NotRequired[List[ScimPhoneNumberTypedDict]]
    photos: NotRequired[List[ScimPhotoTypedDict]]
    preferred_language: NotRequired[str]
    profile_url: NotRequired[str]
    roles: NotRequired[List[ScimRoleTypedDict]]
    r"""Student, Faculty, ..."""
    schemas: NotRequired[List[PropertyScimUserSchemas]]
    timezone: NotRequired[str]
    title: NotRequired[str]
    urn_ietf_params_scim_schemas_extension_enterprise_2_0_user: NotRequired[
        PropertyScimUserUrnIetfParamsScimSchemasExtensionEnterprise20UserTypedDict
    ]
    r"""an organization."""
    urn_ietf_params_scim_schemas_extension_lattice_attributes_1_0_user: NotRequired[
        PropertyScimUserUrnIetfParamsScimSchemasExtensionLatticeAttributes10UserTypedDict
    ]
    urn_ietf_params_scim_schemas_extension_peakon_2_0_user: NotRequired[
        PropertyScimUserUrnIetfParamsScimSchemasExtensionPeakon20UserTypedDict
    ]
    user_name: NotRequired[str]
    user_type: NotRequired[str]
    x509_certificates: NotRequired[List[ScimRoleTypedDict]]


class ScimUser(BaseModel):
    active: Optional[bool] = None

    addresses: Optional[List[ScimAddress]] = None

    display_name: Annotated[Optional[str], pydantic.Field(alias="displayName")] = None

    emails: Optional[List[ScimEmail]] = None

    entitlements: Optional[List[ScimEntitlement]] = None

    external_id: Annotated[Optional[str], pydantic.Field(alias="externalId")] = None

    groups: Optional[List[ScimUserGroups]] = None

    id: Optional[str] = None

    ims: Optional[List[ScimIms]] = None

    locale: Optional[str] = None

    meta: Optional[PropertyScimUserMeta] = None

    name: Optional[PropertyScimUserName] = None

    nick_name: Annotated[Optional[str], pydantic.Field(alias="nickName")] = None

    password: Optional[str] = None

    phone_numbers: Annotated[
        Optional[List[ScimPhoneNumber]], pydantic.Field(alias="phoneNumbers")
    ] = None

    photos: Optional[List[ScimPhoto]] = None

    preferred_language: Annotated[
        Optional[str], pydantic.Field(alias="preferredLanguage")
    ] = None

    profile_url: Annotated[Optional[str], pydantic.Field(alias="profileUrl")] = None

    roles: Optional[List[ScimRole]] = None
    r"""Student, Faculty, ..."""

    schemas: Optional[List[PropertyScimUserSchemas]] = None

    timezone: Optional[str] = None

    title: Optional[str] = None

    urn_ietf_params_scim_schemas_extension_enterprise_2_0_user: Annotated[
        Optional[PropertyScimUserUrnIetfParamsScimSchemasExtensionEnterprise20User],
        pydantic.Field(
            alias="urn:ietf:params:scim:schemas:extension:enterprise:2.0:User"
        ),
    ] = None
    r"""an organization."""

    urn_ietf_params_scim_schemas_extension_lattice_attributes_1_0_user: Annotated[
        Optional[
            PropertyScimUserUrnIetfParamsScimSchemasExtensionLatticeAttributes10User
        ],
        pydantic.Field(
            alias="urn:ietf:params:scim:schemas:extension:lattice:attributes:1.0:User"
        ),
    ] = None

    urn_ietf_params_scim_schemas_extension_peakon_2_0_user: Annotated[
        Optional[PropertyScimUserUrnIetfParamsScimSchemasExtensionPeakon20User],
        pydantic.Field(alias="urn:ietf:params:scim:schemas:extension:peakon:2.0:User"),
    ] = None

    user_name: Annotated[Optional[str], pydantic.Field(alias="userName")] = None

    user_type: Annotated[Optional[str], pydantic.Field(alias="userType")] = None

    x509_certificates: Annotated[
        Optional[List[ScimRole]], pydantic.Field(alias="x509Certificates")
    ] = None
