"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .property_scimuser_urn_ietf_params_scim_schemas_extension_enterprise_2_0_user_manager import (
    PropertyScimUserUrnIetfParamsScimSchemasExtensionEnterprise20UserManager,
    PropertyScimUserUrnIetfParamsScimSchemasExtensionEnterprise20UserManagerTypedDict,
)
from .scimmanager import ScimManager, ScimManagerTypedDict
from datetime import datetime
from enum import Enum
import pydantic
from typing import List, Optional
from typing_extensions import Annotated, NotRequired, TypedDict
from unified_python_sdk.types import BaseModel


class PropertyScimUserUrnIetfParamsScimSchemasExtensionEnterprise20UserGender(
    str, Enum
):
    MALE = "male"
    FEMALE = "female"


class PropertyScimUserUrnIetfParamsScimSchemasExtensionEnterprise20UserTypedDict(
    TypedDict
):
    r"""an organization."""

    additional_managers: NotRequired[List[ScimManagerTypedDict]]
    birthday: NotRequired[datetime]
    cost_center: NotRequired[str]
    department: NotRequired[str]
    division: NotRequired[str]
    employee_number: NotRequired[str]
    end_date: NotRequired[datetime]
    gender: NotRequired[
        PropertyScimUserUrnIetfParamsScimSchemasExtensionEnterprise20UserGender
    ]
    level: NotRequired[str]
    location: NotRequired[str]
    manager: NotRequired[
        PropertyScimUserUrnIetfParamsScimSchemasExtensionEnterprise20UserManagerTypedDict
    ]
    r"""\"id\" attribute of another User."""
    organization: NotRequired[str]
    start_date: NotRequired[datetime]


class PropertyScimUserUrnIetfParamsScimSchemasExtensionEnterprise20User(BaseModel):
    r"""an organization."""

    additional_managers: Annotated[
        Optional[List[ScimManager]], pydantic.Field(alias="additionalManagers")
    ] = None

    birthday: Optional[datetime] = None

    cost_center: Annotated[Optional[str], pydantic.Field(alias="costCenter")] = None

    department: Optional[str] = None

    division: Optional[str] = None

    employee_number: Annotated[
        Optional[str], pydantic.Field(alias="employeeNumber")
    ] = None

    end_date: Annotated[Optional[datetime], pydantic.Field(alias="endDate")] = None

    gender: Optional[
        PropertyScimUserUrnIetfParamsScimSchemasExtensionEnterprise20UserGender
    ] = None

    level: Optional[str] = None

    location: Optional[str] = None

    manager: Optional[
        PropertyScimUserUrnIetfParamsScimSchemasExtensionEnterprise20UserManager
    ] = None
    r"""\"id\" attribute of another User."""

    organization: Optional[str] = None

    start_date: Annotated[Optional[datetime], pydantic.Field(alias="startDate")] = None
