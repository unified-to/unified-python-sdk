"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from enum import Enum
import pydantic
from pydantic.functional_validators import PlainValidator
from typing import Optional
from typing_extensions import Annotated, NotRequired, TypedDict
from unified_python_sdk import utils
from unified_python_sdk.types import BaseModel
from unified_python_sdk.utils import validate_open_enum


class PropertyScimUserMetaResourceType(str, Enum, metaclass=utils.OpenEnumMeta):
    USER = "User"
    GROUP = "Group"


class PropertyScimUserMetaTypedDict(TypedDict):
    created: NotRequired[str]
    last_modified: NotRequired[str]
    location: NotRequired[str]
    resource_type: NotRequired[PropertyScimUserMetaResourceType]
    version: NotRequired[str]


class PropertyScimUserMeta(BaseModel):
    created: Optional[str] = None

    last_modified: Annotated[Optional[str], pydantic.Field(alias="lastModified")] = None

    location: Optional[str] = None

    resource_type: Annotated[
        Annotated[
            Optional[PropertyScimUserMetaResourceType],
            PlainValidator(validate_open_enum(False)),
        ],
        pydantic.Field(alias="resourceType"),
    ] = None

    version: Optional[str] = None
