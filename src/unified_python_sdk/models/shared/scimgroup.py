"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .property_scimgroup_meta import (
    PropertyScimGroupMeta,
    PropertyScimGroupMetaTypedDict,
)
from .property_scimgroup_schemas import PropertyScimGroupSchemas
from .scimgroupmember import ScimGroupMember, ScimGroupMemberTypedDict
import pydantic
from typing import List, Optional
from typing_extensions import Annotated, NotRequired, TypedDict
from unified_python_sdk.types import BaseModel


class ScimGroupTypedDict(TypedDict):
    display_name: str
    external_id: NotRequired[str]
    group_type: NotRequired[str]
    id: NotRequired[str]
    members: NotRequired[List[ScimGroupMemberTypedDict]]
    r"""An array of members"""
    meta: NotRequired[PropertyScimGroupMetaTypedDict]
    schemas: NotRequired[List[PropertyScimGroupSchemas]]
    r"""Array of schema URIs"""


class ScimGroup(BaseModel):
    display_name: Annotated[str, pydantic.Field(alias="displayName")]

    external_id: Annotated[Optional[str], pydantic.Field(alias="externalId")] = None

    group_type: Annotated[Optional[str], pydantic.Field(alias="groupType")] = None

    id: Optional[str] = None

    members: Optional[List[ScimGroupMember]] = None
    r"""An array of members"""

    meta: Optional[PropertyScimGroupMeta] = None

    schemas: Optional[List[PropertyScimGroupSchemas]] = None
    r"""Array of schema URIs"""
