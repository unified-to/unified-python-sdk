"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from datetime import datetime
from enum import Enum
import pydantic
from typing import Optional
from typing_extensions import Annotated, NotRequired, TypedDict
from unified_python_sdk.types import BaseModel


class Ethnicity(str, Enum):
    CAUCASIAN = "Caucasian"
    EAST_ASIAN = "East Asian"
    MIDDLE_EASTERN = "Middle Eastern"
    BLACK = "Black"
    BIRACIAL_SOUTH_ASIAN_AND_CAUCASIAN_ = "Biracial (South Asian & Caucasian)"
    FILIPINO = "Filipino"
    SOUTH_ASIAN = "South Asian"
    INDIAN = "Indian"
    WHITE = "White"
    ASIAN = "Asian"


class PropertyScimUserUrnIetfParamsScimSchemasExtensionLatticeAttributes10UserGender(
    str, Enum
):
    MALE = "male"
    FEMALE = "female"


class SexualOrientation(str, Enum):
    QUEER = "Queer"
    HETEROSEXUAL = "Heterosexual"
    STRAIGHT = "Straight"


class PropertyScimUserUrnIetfParamsScimSchemasExtensionLatticeAttributes10UserTypedDict(
    TypedDict
):
    job_level: NotRequired[str]
    people_manager_reviews: NotRequired[str]
    remote_work_location: NotRequired[str]
    salary_information: NotRequired[str]
    sub_departments: NotRequired[str]
    birth_date: NotRequired[datetime]
    ethnicity: NotRequired[Ethnicity]
    gender: NotRequired[
        PropertyScimUserUrnIetfParamsScimSchemasExtensionLatticeAttributes10UserGender
    ]
    sexual_orientation: NotRequired[SexualOrientation]
    start_date: NotRequired[datetime]


class PropertyScimUserUrnIetfParamsScimSchemasExtensionLatticeAttributes10User(
    BaseModel
):
    job_level: Annotated[Optional[str], pydantic.Field(alias="Job Level")] = None

    people_manager_reviews: Annotated[
        Optional[str], pydantic.Field(alias="People Manager (Reviews)")
    ] = None

    remote_work_location: Annotated[
        Optional[str], pydantic.Field(alias="Remote Work - Location")
    ] = None

    salary_information: Annotated[
        Optional[str], pydantic.Field(alias="Salary Information")
    ] = None

    sub_departments: Annotated[
        Optional[str], pydantic.Field(alias="Sub Departments")
    ] = None

    birth_date: Annotated[Optional[datetime], pydantic.Field(alias="birthDate")] = None

    ethnicity: Optional[Ethnicity] = None

    gender: Optional[
        PropertyScimUserUrnIetfParamsScimSchemasExtensionLatticeAttributes10UserGender
    ] = None

    sexual_orientation: Annotated[
        Optional[SexualOrientation], pydantic.Field(alias="sexualOrientation")
    ] = None

    start_date: Annotated[Optional[datetime], pydantic.Field(alias="startDate")] = None
