"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .calendarattendee import CalendarAttendee, CalendarAttendeeTypedDict
from .property_calendarevent_organizer import (
    PropertyCalendarEventOrganizer,
    PropertyCalendarEventOrganizerTypedDict,
)
from enum import Enum
from typing import List, Optional
from typing_extensions import NotRequired, TypedDict
from unified_python_sdk.types import BaseModel


class CalendarEventRawTypedDict(TypedDict):
    pass


class CalendarEventRaw(BaseModel):
    pass


class CalendarEventStatus(str, Enum):
    CANCELED = "CANCELED"
    CONFIRMED = "CONFIRMED"
    TENTATIVE = "TENTATIVE"


class CalendarEventTypedDict(TypedDict):
    end_at: str
    start_at: str
    subject: str
    attendees: NotRequired[List[CalendarAttendeeTypedDict]]
    calendar_id: NotRequired[str]
    created_at: NotRequired[str]
    id: NotRequired[str]
    is_all_day: NotRequired[bool]
    is_free: NotRequired[bool]
    is_private: NotRequired[bool]
    location: NotRequired[str]
    notes: NotRequired[str]
    organizer: NotRequired[PropertyCalendarEventOrganizerTypedDict]
    raw: NotRequired[CalendarEventRawTypedDict]
    status: NotRequired[CalendarEventStatus]
    timezone: NotRequired[str]
    updated_at: NotRequired[str]
    web_url: NotRequired[str]


class CalendarEvent(BaseModel):
    end_at: str

    start_at: str

    subject: str

    attendees: Optional[List[CalendarAttendee]] = None

    calendar_id: Optional[str] = None

    created_at: Optional[str] = None

    id: Optional[str] = None

    is_all_day: Optional[bool] = None

    is_free: Optional[bool] = None

    is_private: Optional[bool] = None

    location: Optional[str] = None

    notes: Optional[str] = None

    organizer: Optional[PropertyCalendarEventOrganizer] = None

    raw: Optional[CalendarEventRaw] = None

    status: Optional[CalendarEventStatus] = None

    timezone: Optional[str] = None

    updated_at: Optional[str] = None

    web_url: Optional[str] = None
